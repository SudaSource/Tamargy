@using Core.Data.Models
@using Core.Data.Types
@using Core.UI.Web.App_Start.Resources
@using Core.UI.Web.Utilites
@model List<Core.Lib.SDK.ViewModels.PostVM>

@{
    bool allowComment = false;
    User user = null;
    try
    {


        var cookie = Request.Cookies["User"];
        if (cookie != null)
        {
            long id = long.Parse(cookie["UserId"]);
            user = UserControle.GetUser(id);
            if (user != null)
            {
                allowComment = true;
            }
        }
    }
    catch (Exception e)
    {
        allowComment = false;
    }
    bool liked = false;

    if (Model.Count != 0)
    {

        foreach (var p in Model)
        {
            var comm = p.Comments;
            try
            {
                var like = p.PostLikes.SingleOrDefault(x => user != null && x.User == user.Id);
                if (like != null)
                {
                    liked = true;
                }
            }
            catch
            {
                liked = false;
            }

            <!-- Post -->
            <div class="post">
                <div class="user-block">
                    @{
                        if (p.CreatedBy.Img != null)
                        {
                            <img class="img-circle img-bordered-sm" src="@Url.Action("GetProfileImage", "_Image", new {id = p.CreatedBy.Id})" alt="User Image">
                        }
                        else
                        {
                            <img class="img-circle img-bordered-sm" src="~/Content/eng/dist/img/placeholder.png" alt="User Image">
                            //
                        }
                    }
                    <span class="username">
                        <a href="#">@p.CreatedBy.Name</a>
                        @{
                            if (user != null && user.Id == p.CreatedBy.Id)
                            {
                                <a href="#" class="float-right btn-tool" onclick="DeletePost(@p.Id)"><i class="fas fa-times"></i></a>
                            }
                        }
                    </span>
                    @{
                        if (p.PostType == PostType.Need)
                        {
                            <span class="badge badge-info">@Lang.Need</span>
                        }
                        else
                        {
                            <span class="badge badge-success">@Lang.Provider</span>
                        }
                    }

                    @{
                        switch (p.CreatedBy.Role)
                        {
                            case Role.Admin:
                                <span class="description">@Lang.Admin</span>
                                break;
                            case Role.Pharmacist:
                                <span class="description">@Lang.Pharmacist</span>
                                break;
                            case Role.Doctor:
                                <span class="description">@Lang.Doctor</span>
                                break;
                            case Role.Citizen:
                                <span class="description">@Lang.Citizen</span>
                                break;
                        }
                    }
                    <span class="description">@p.CreateDate.ToString("dd/MM hh:mm")</span>
                </div>
                <!-- /.user-block -->
                <!-- post text -->
                <b>@p.MedicineNameAr, @p.MedicineNameEng</b>
                <p>
                    @p.Text
                </p>

                <p>
                    @{
                        if (user != null)
                        {

                            if (liked)
                            {
                                <button id="_btnLike-@p.Id" type="button" class="btn btn-default btn-sm" style="background-color: blue; color: aliceblue" onclick="Like(@p.Id, false)">
                                    <i class="far fa-thumbs-up"></i> @Lang.Like
                                </button>
                            }
                            else
                            {
                                <button id="_btnLike-@p.Id" type="button" class="btn btn-default btn-sm" onclick="Like(@p.Id, true)">
                                    <i class="far fa-thumbs-up"></i> @Lang.Like
                                </button>
                            }
                        }
                    }
                    <span class="float-right">@p.Likes @Lang.likes -@p.Comments.Count @Lang.comments</span>

                    @*<span class="float-right">
                            <a href="#" class="link-black text-sm">
                                <i class="far fa-comments mr-1"></i> Comments (5)
                            </a>
                        </span>*@
                </p>
                <div class="card-footer card-comments" id="_comments_list_@p.Id">
                    @{
                        foreach (var c in comm)
                        {
                            <div class="card-comment">

                                @{
                                    if (c.CreatedBy.Img != null)
                                    {
                                        <img class="img-circle img-sm" src="@Url.Action("GetProfileImage", "_Image", new {id = c.CreatedBy.Id})" alt="User Image">
                                    }
                                    else
                                    {
                                        <img class="img-circle img-sm" src="~/Content/eng/dist/img/placeholder.png" alt="User Image">
                                    }
                                }
                                <!-- User image -->
                                @{
                                    if (user != null && c.CreatedBy.Id == user.Id)
                                    {
                                        <button onclick="DeleteComment(@c.Id)" type="button" class="btn btn-tool btn-sm">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    }
                                }

                                <div class="comment-text">
                                    <span class="username">
                                        @c.CreatedBy.Name
                                        @{
                                            switch (p.CreatedBy.Role)
                                            {
                                                case Role.Admin:
                                                    <span class="text-muted">@Lang.Admin</span>
                                                    break;
                                                case Role.Pharmacist:
                                                    <span class="text-muted">@Lang.Pharmacist</span>
                                                    break;
                                                case Role.Doctor:
                                                    <span class="text-muted">@Lang.Doctor</span>
                                                    break;
                                                case Role.Citizen:
                                                    <span class="text-muted">@Lang.Citizen</span>
                                                    break;
                                            }
                                        }
                                        &nbsp;<span class="text-muted float-right">@c.CreateDate.ToString("dd/MM - hh:mm")</span>
                                    </span><!-- /.username -->
                                    @c.Text
                                </div>
                                <!-- /.comment-text -->
                            </div>
                        }
                    }
                </div>
                <div class="card-footer">
                    <div>
                        @{
                            if (user.Img != null)
                            {
                                <img class="img-circle img-sm" src="@Url.Action("GetProfileImage", "_Image", new {id = user.Id})" alt="User Image">
                            }
                            else
                            {
                                <img class="img-circle img-sm" src="~/Content/eng/dist/img/placeholder.png" alt="User Image">
                            }
                        }

                        <div class="img-push">
                            <input type="text" maxlength="250" onkeypress="Comment(event, @p.Id)" id="_comm_@p.Id" class="form-control form-control-sm" placeholder="@Msg.CommentIns">
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="post">
            <div class="alert alert-info">
                @Lang.NotFound
            </div>
        </div>
    }
}
